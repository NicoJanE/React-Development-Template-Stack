# This file is part of: React Development Template Stack 
# Copyright (c) 2024 Nico Jan Eelhart
#
# This source code is licensed under the MIT License found in the  'LICENSE.md' file in the root directory of this source tree.
#
#	Extending/Chaining 
#
#   Some notes regarding chaining:
#   NOTE 1
#   - Bind mounts don't carry over, you have to specify them again
#   - same counts for network and pretty much all items
#   - So better to use a common compose file and let the other compose files extend from items(like we done see extends: )

networks:
  react_network:                             # Define a network

volumes:
  react-vol:

services:
  webserver-nodejs_22-react:                # Same name as base file!
    extends: 
      file: compose_nodejs_react_cont.yml   # our base compose file, see NOTE 1
      service: webserver-nodejs_22-react    # Same name as base file!
#    env_file:                              # THIS horrible feature (env_file) does not work with sub directories or/and alternative names
#      - ./NEXTJS_customized/.env           # Forget about it, it just DONT work! See Remark 1 in the file: .env (July 2024)
    build:
      context: .
      dockerfile: Dockerfile_NEXTJS_cust_cra__project_Cont
      args:
        PRJ_NAME_ARG: ${PRJ_NAME_ARG_NEXT}  # Assign PRJ_NAME_ARG with the.env file variable. This may make PRJ_NAME_ARG available in dockefile (By defining )
        PRJ_BASE_ARG: ${PRJ_BASE_ARG_NEXT}
        PORT: ${PORT}
    ports:
        - "${PORT}:${PORT}"                 # First host second container
    image: eelhart/react-base:latest2       # This name can be used to extend or chain this image.
    environment:
        - PORT=${PORT}                      # Pass variable from .env to PORT (1e), this is available in the container(ENV) and in dockerfile, during building after
                                            # defining: 'ARG PORT' in the docker file
    working_dir: ${PRJ_BASE_ARG_NEXT}/$PRJ_NAME_ARG_NEXT
    volumes:
            - react-vol:/volume-share       # Alternative volume, bind mounts gave huge problems.No directory creation (./projects:/projects)
    command: ["npm", "run", "dev"]         # Development start
#    command: ["npm", "start"]              # Production start
#    command: ["/bin/sh", "-c", "while sleep 1000; do :; done"]  # use this in case of err, let's you get in(CMD)

# End compose file 



# compose_nextjs_cust_cra_project.yml
# Handies               
# docker system prune -a --volumes 
# docker logs  2dd65e02f0e4 
# docker exec -it 2dd65e02f0e4 /bin/bash
